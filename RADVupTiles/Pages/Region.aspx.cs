using RADBusinessLogicLayer;
using RADCommonServices;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Telerik.Web.UI;

public partial class Pages_Region : System.Web.UI.Page
{

    protected void Page_Load(object sender, EventArgs e)
    {

    }

    protected void RadGrid1_NeedDataSource(object sender, Telerik.Web.UI.GridNeedDataSourceEventArgs e)
    {
        CommonFunctions commFunc = new CommonFunctions();
        BusinessLogic obj = new BusinessLogic();
        RadGrid1.DataSource = obj.GetAreas(commFunc.GetUsersCompanyID(Context));
    }

    protected void RadGrid1_DeleteCommand(object sender, GridCommandEventArgs e)
    {
        //Get the GridDataItem of the RadGrid        
        GridDataItem item = (GridDataItem)e.Item;
        //Get the primary key value using the DataKeyValue.       
        int AreaID = Convert.ToInt32(item.OwnerTableView.DataKeyValues[item.ItemIndex]["AreaID"].ToString());
        try
        {
            BusinessLogic objBuss = new BusinessLogic();
            objBuss.DeleteArea(AreaID);
        }
        catch (Exception ex)
        {
            RadGrid1.Controls.Add(new LiteralControl("Unable to delete Area. Reason: " + ex.Message));
            e.Canceled = true;
        }
    }

    protected void RadGrid1_UpdateCommand(object sender, GridCommandEventArgs e)
    {
        //Get the GridEditableItem of the RadGrid      
        GridEditableItem editedItem = e.Item as GridEditableItem;
        //Get the primary key value using the DataKeyValue.      
        int AreaID = Convert.ToInt32(editedItem.OwnerTableView.DataKeyValues[editedItem.ItemIndex]["AreaID"]);
        //Access the textbox from the edit form template and store the values in string variables.   
        string AreaName = (editedItem["AreaName"].Controls[0] as TextBox).Text;
        try
        {
            BusinessLogic objBuss = new BusinessLogic();
            objBuss.UpdateArea(AreaID, AreaName);
        }
        catch (Exception ex)
        {
            RadGrid1.Controls.Add(new LiteralControl("Unable to update Area. Reason: " + ex.Message));
            e.Canceled = true;
        }
    }

    protected void btnArea_Click(object sender, EventArgs e)
    {

    }

    protected void btnEdit_Click(object sender, EventArgs e)
    {
        foreach (GridDataItem item in RadGrid1.SelectedItems)
        {
            string AreaID = item.GetDataKeyValue("AreaID").ToString(); // Works if you set the DataKeyValue as CustomerID             
            item.Edit = true;
            RadGrid1.MasterTableView.Rebind();
        }
        //(RadGrid1.MasterTableView.Items[0].FindControl("AutoGeneratedEditButton") as LinkButton).Visible = false;
    }

    protected void btnDelete_Click(object sender, EventArgs e)
    {
        foreach (GridDataItem item in RadGrid1.SelectedItems)
        {
            //Get the primary key value using the DataKeyValue.       
            int AreaID = Convert.ToInt32(item.GetDataKeyValue("AreaID").ToString());
            try
            {
                BusinessLogic objBuss = new BusinessLogic();
                objBuss.DeleteArea(AreaID);
                RadGrid1.Rebind();
            }
            catch (Exception ex)
            {
                RadGrid1.Controls.Add(new LiteralControl("Unable to delete Region. Reason: " + ex.Message));                
            }
        }
    }
}