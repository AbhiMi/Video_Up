<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
		<section name="botDetect" requirePermission="false" type="BotDetect.Configuration.BotDetectConfigurationSection, BotDetect" />
	</configSections>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="DefaultConnection" value="Data Source=USHYDABHISHEMI4;Initial Catalog=Video-Up;Persist Security Info=True;User ID=Abhishek;Password=Mishra@6m" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  <httpHandlers>
			<add verb="GET" path="BotDetectCaptcha.ashx" type="BotDetect.Web.CaptchaHandler, BotDetect" />
		</httpHandlers><sessionState mode="InProc" cookieless="AutoDetect" timeout="20" sessionIDManagerType="BotDetect.Web.CustomSessionIdManager, BotDetect" /><pages enableSessionState="true">
			<controls>
				<add assembly="BotDetect" namespace="BotDetect.Web.UI" tagPrefix="BotDetect" />
			</controls>
		</pages></system.web>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <!--Used by app for SharePoint-->
        <binding name="secureBinding">
          <security mode="Transport" />
        </binding>
      </basicHttpBinding>
      <webHttpBinding>
        <binding name="RestBindingConfiguration">
          <!--<security mode="None" >
            <transport clientCredentialType="None" proxyCredentialType="None"></transport>
          </security>-->

          <security mode="None" />
        </binding>
      </webHttpBinding>
    </bindings>
    <services>
      <service name="SchedulerServiceApplication.SchedulerService" behaviorConfiguration="MyServiceBehavior">
        <host>
          <baseAddresses>
            <add baseAddress="https://localhost:8080/" />
          </baseAddresses>
        </host>
        <endpoint address="" behaviorConfiguration="RestBehavior" binding="webHttpBinding" bindingConfiguration="RestBindingConfiguration" contract="SchedulerServiceApplication.ISchedulerService" />
      </service>
    </services>
    <behaviors>
      <endpointBehaviors>
        <behavior name="RestBehavior">
          <webHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="MyServiceBehavior">
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
       <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true" />
  <validation validateIntegratedModeConfiguration="false" /><handlers>
			<remove name="BotDetectCaptchaHandler" />
			<add name="BotDetectCaptchaHandler" preCondition="integratedMode" verb="GET" path="BotDetectCaptcha.ashx" type="BotDetect.Web.CaptchaHandler, BotDetect" />
		</handlers></system.webServer>

<botDetect helpLinkEnabled="true" helpLinkMode="image" /></configuration>
